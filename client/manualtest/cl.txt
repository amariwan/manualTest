@startuml
set namespaceSeparator ::

class "manualtest::json.dart::Tester" {
  +String email
  +String name
  +Map<String, dynamic> toJson()
}

class "manualtest::json.dart::Signature" {
  +int index
  +String createdAt
  +Map<String, dynamic> toJson()
}

class "manualtest::json.dart::Mail" {
  +String body
  +String subject
  +Map<String, dynamic> toJson()
}

class "manualtest::json.dart::Tasks" {
  +String description
  +String tester
  +String? result
  +String? comment
  +Map<String, dynamic> toJson()
}

class "manualtest::json.dart::Order" {
  +String event
  +String callbackUrl
  +Tester creator
  +String description
  +String expireDate
  +Mail mail
  +List<Tasks> tasks
  +List<Tester> testers
  +bool testComplete
  +String id
  +String createdAt
  +String updatedAt
  +Signature stump
  +Map<String, dynamic> toJson()
}

"manualtest::json.dart::Order" o-- "manualtest::json.dart::Tester"
"manualtest::json.dart::Order" o-- "manualtest::json.dart::Mail"
"manualtest::json.dart::Order" o-- "manualtest::json.dart::Signature"
"manualtest::json.dart::Order" o-- "manualtest::json.dart::Tasks"

class "manualtest::json.dart::Orders" {
  +List<Order> orders
  +String event
  +Signature stump
  +Map<String, dynamic> toJson()
}

"manualtest::json.dart::Orders" o-- "manualtest::json.dart::Signature"
"manualtest::json.dart::Orders" o-- "manualtest::json.dart::Order"

class "manualtest::login.dart::SigIn" {
  +TextEditingController loginController
  +_SigInState createState()
}

"manualtest::login.dart::SigIn" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "manualtest::login.dart::SigIn"

class "manualtest::login.dart::_SigInState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "manualtest::login.dart::_SigInState"
 "manualtest::login.dart::_SigInState" --> "manualtest::orders.dart::OrdersPages"

class "manualtest::main.dart::ManualTest" {
  +State<ManualTest> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "manualtest::main.dart::ManualTest"
"manualtest::main.dart::ManualTest" --> "manualtest::main.dart::_ManualTestState"

class "manualtest::main.dart::_ManualTestState" {
  +void initState()
  +void dispose()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "manualtest::main.dart::_ManualTestState"
"manualtest::main.dart::_ManualTestState" --> "manualtest::order.dart::OrderPage"
"manualtest::main.dart::_ManualTestState" --> "manualtest::login.dart::SigIn"

class "manualtest::order.dart::OrderPage" {
  +String title
  +String tester
  +String orderId
  +bool buildFirstTime
  +List<OrderModel> orderModels
  +_OrderPageState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "manualtest::order.dart::OrderPage"
"manualtest::order.dart::OrderPage" --> "manualtest::order.dart::_OrderPageState"

class "manualtest::order.dart::_OrderPageState" {
  +Widget build()
  +Widget getWidgetsFromWebsocketOrder()
  -List<Order> _convertInfoFromWebSocketOrder()
}

"flutter::src::widgets::framework.dart::State" <|-- "manualtest::order.dart::_OrderPageState"
"manualtest::order.dart::_OrderPageState" --> "manualtest::orders.dart::OrdersPages"
"manualtest::order.dart::_OrderPageState" --> "manualtest::json.dart::Order"
"manualtest::order.dart::_OrderPageState" --> "fwidget::widgets::table.dart::FTable<dynamic>"
"manualtest::order.dart::_OrderPageState" --> "manualtest::json.dart::Orders"
"manualtest::order.dart::_OrderPageState" --> "manualtest::order_model.dart::OrderModel"
"manualtest::order.dart::_OrderPageState" --> "fwidget::widgets::table.dart::FTableController<dynamic>"
"manualtest::order.dart::_OrderPageState" --> "manualtest::orders_model.dart::FTableRowOrdersModel"
"manualtest::order.dart::_OrderPageState" --> "manualtest::json.dart::Tasks"
"manualtest::order.dart::_OrderPageState" --> "manualtest::json.dart::Tester"
"manualtest::order.dart::_OrderPageState" --> "manualtest::json.dart::Mail"
"manualtest::order.dart::_OrderPageState" --> "manualtest::stream_controller.dart::WebSocketController"
"manualtest::order.dart::_OrderPageState" --> "manualtest::json.dart::Signature"
"manualtest::order.dart::_OrderPageState" --> "manualtest::stream_controller.dart::Index"

class "manualtest::orders.dart::OrdersPages" {
  +String title
  +String tester
  +_OrdersPagesState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "manualtest::orders.dart::OrdersPages"
"manualtest::orders.dart::OrdersPages" --> "manualtest::orders.dart::_OrdersPagesState"

class "manualtest::orders.dart::_OrdersPagesState" {
  +void initState()
  +Widget build()
  +Widget getWidgetsFromWebsocket()
  -List<Order> _convertInfoFromWebSocket()
}

"flutter::src::widgets::framework.dart::State" <|-- "manualtest::orders.dart::_OrdersPagesState"
"manualtest::orders.dart::_OrdersPagesState" --> "manualtest::json.dart::Order"
"manualtest::orders.dart::_OrdersPagesState" --> "manualtest::login.dart::SigIn"
"manualtest::orders.dart::_OrdersPagesState" --> "fwidget::widgets::table.dart::FTableController<dynamic>"
"manualtest::orders.dart::_OrdersPagesState" --> "manualtest::orders_model.dart::OrdersModel"
"manualtest::orders.dart::_OrdersPagesState" --> "manualtest::orders_model.dart::FTableRowOrdersModel"
"manualtest::orders.dart::_OrdersPagesState" --> "fwidget::widgets::table.dart::FTable<dynamic>"

class "manualtest::orders_model.dart::FTableRowOrdersModel" {
  +String tester
  {static} +List<String> headers()
  +List<Widget> build()
  +void updateValue()
  +bool hasSameValue()
  +FTableRow<OrdersModel> clone()
}

"fwidget::widgets::table.dart::FTableRow" <|-- "manualtest::orders_model.dart::FTableRowOrdersModel"
"manualtest::orders_model.dart::FTableRowOrdersModel" --> "manualtest::orders_model.dart::OrdersModel"
"manualtest::orders_model.dart::FTableRowOrdersModel" --> "manualtest::stream_controller.dart::WebSocketController"
"manualtest::orders_model.dart::FTableRowOrdersModel" --> "manualtest::order.dart::OrderPage"

class "manualtest::orders_model.dart::OrdersModel" {
  +String name
  +String description
  +String createdAt
  +String expireDate
  +String id
  +bool testComplete
  +int hashCode
  +OrdersModel clone()
  +bool ==()
}

"fwidget::helpers::cloneable.dart::FCloneable" <|-- "manualtest::orders_model.dart::OrdersModel"

class "manualtest::order_model.dart::FTableRowOrderModel" {
  +void Function()? onChange
  +Tasks task
  +String id
  +String tester
  +bool isTacked
  {static} +List<String> headers()
  +List<Widget> build()
  +void updateValue()
  +bool hasSameValue()
  +FTableRow<OrderModel> clone()
}

"manualtest::order_model.dart::FTableRowOrderModel" o-- "null::void Function()"
"manualtest::order_model.dart::FTableRowOrderModel" o-- "manualtest::json.dart::Tasks"
"fwidget::widgets::table.dart::FTableRow" <|-- "manualtest::order_model.dart::FTableRowOrderModel"

class "manualtest::order_model.dart::OrderModel" {
  +FocusNode focusNode
  +Tasks task
  +FTextEditingController testerController
  +FTextEditingController descriptionController
  +bool? status
  +FTextEditingController commitController
  +String tester
  +String description
  +String commit
  +bool? statusValue
  +int hashCode
  +String get tester
  +String get description
  +String get commit
  +void set tester(String)
  +void set description(String)
  +void set commit(String)
  +bool? get statusValue 
  +void set statusValue(bool?)
  +bool isEqual(OrderModel)
  +int get hashCode
  +bool ==()
  +OrderModel clone()
}

"manualtest::order_model.dart::OrderModel" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"manualtest::order_model.dart::OrderModel" o-- "manualtest::json.dart::Tasks"
"manualtest::order_model.dart::OrderModel" o-- "fwidget::controllers::text_editing_controller.dart::FTextEditingController"
"fwidget::helpers::cloneable.dart::FCloneable" <|-- "manualtest::order_model.dart::OrderModel"

class "manualtest::stream_controller.dart::WebSocketController" {
  +String url
  +WebSocketChannel channel
  -StreamController<dynamic> _streamController
  -StreamSubscription<dynamic> _subscription
  +Stream<dynamic> stream
  +void sendMessage()
  +void dispose()
  +void sendEmail()
  +void getValues()
  +void deleteValues()
}

"manualtest::stream_controller.dart::WebSocketController" o-- "web_socket_channel::src::channel.dart::WebSocketChannel"
"manualtest::stream_controller.dart::WebSocketController" o-- "dart::async::StreamController<dynamic>"
"manualtest::stream_controller.dart::WebSocketController" o-- "dart::async::StreamSubscription<dynamic>"
"manualtest::stream_controller.dart::WebSocketController" o-- "dart::async::Stream<dynamic>"
"manualtest::stream_controller.dart::WebSocketController" --> "manualtest::json.dart::Order"
"manualtest::stream_controller.dart::WebSocketController" --> "manualtest::stream_controller.dart::Index"
"manualtest::stream_controller.dart::WebSocketController" --> "manualtest::json.dart::Tasks"
"manualtest::stream_controller.dart::WebSocketController" --> "manualtest::json.dart::Mail"
"manualtest::stream_controller.dart::WebSocketController" --> "manualtest::json.dart::Tester"
"manualtest::stream_controller.dart::WebSocketController" --> "manualtest::json.dart::Signature"
class "manualtest::stream_controller.dart::Index" {
  +int index
  +void increment()
}


@enduml